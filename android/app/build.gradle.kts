import java.util.Properties
import java.io.FileInputStream

plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("dev.flutter.flutter-gradle-plugin")
    id("com.google.gms.google-services") version "4.4.0" apply false
    id("com.google.firebase.crashlytics") version "2.9.9" apply false
    id("com.google.firebase.firebase-perf") version "1.4.2" apply false
}

val localProperties = Properties().apply {
    val file = rootProject.file("local.properties")
    if (file.exists()) {
        file.inputStream().use { load(it) }
    }
}

val keystoreProperties = Properties().apply {
    val file = rootProject.file("key.properties")
    if (file.exists()) {
        file.inputStream().use { load(it) }
    }
}

//val flutterVersionCode = localProperties.getProperty("flutter.versionCode")?.toIntOrNull() ?: 1
//val flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "br.app.ondegastei.onde_gastei_app"
    compileSdk = localProperties.getProperty("flutter.compileSdkVersion")?.toInt() ?: 35
    ndkVersion = flutter.ndkVersion

    defaultConfig {
        applicationId = "br.app.ondegastei.onde_gastei_app"
        minSdk = localProperties.getProperty("flutter.minSdkVersion")?.toInt() ?: 21
        targetSdk =  localProperties.getProperty("flutter.targetSdkVersion")?.toInt() ?: 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        create("release") {
            keyAlias = keystoreProperties["keyAlias"] as String?
            keyPassword = keystoreProperties["keyPassword"] as String?
            storeFile = keystoreProperties["storeFile"]?.let { file(it as String) }
            storePassword = keystoreProperties["storePassword"] as String?
        }
    }

    buildTypes {
        getByName("release") {
            signingConfig = signingConfigs.getByName("release")
        }
        getByName("debug") {
            signingConfig = signingConfigs.getByName("debug")
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions += "flavor-type"

    productFlavors {
        create("dev") {
            dimension = "flavor-type"
            applicationId = "br.app.ondegastei.onde_gastei_app.dev"
            resValue("string", "app_name", "Dev")
        }
        create("prod") {
            dimension = "flavor-type"
            applicationId = "br.app.ondegastei.onde_gastei_app"
            resValue("string", "app_name", "Onde Gastei")
        }
    }
    // ----- END flavorDimensions -----
}

flutter {
    source = "../.."
}




// plugins {
//     id "com.android.application"
//     id "kotlin-android"
//     id "dev.flutter.flutter-gradle-plugin"
//     id "com.google.gms.google-services" version "4.4.0" apply false
//     id "com.google.firebase.crashlytics" version "2.9.9" apply false
//     id "com.google.firebase.firebase-perf" version "1.4.2" apply false
// }

// def localProperties = new Properties()
// def localPropertiesFile = rootProject.file('local.properties')
// if (localPropertiesFile.exists()) {
//     localPropertiesFile.withReader('UTF-8') { reader ->
//         localProperties.load(reader)
//     }
// }

// def keystoreProperties = new Properties()
// def keystorePropertiesFile = rootProject.file('key.properties')
// if (keystorePropertiesFile.exists()) {
//     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// }


// def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
// if (flutterVersionCode == null) {
//     flutterVersionCode = '1'
// }

// def flutterVersionName = localProperties.getProperty('flutter.versionName')
// if (flutterVersionName == null) {
//     flutterVersionName = '1.0'
// }

// android {

//     // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
//     flavorDimensions "flavor-type"

//     productFlavors {
//         dev {
//             dimension "flavor-type"
//             applicationId "br.app.ondegastei.onde_gastei_app.dev"
//             resValue "string", "app_name", "Dev"
//         }
//         prod {
//             dimension "flavor-type"
//             applicationId "br.app.ondegastei.onde_gastei_app"
//             resValue "string", "app_name", "Onde Gastei"
//         }
//     }

//     // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

//     namespace "br.app.ondegastei.onde_gastei_app"
//     compileSdk = flutter.compileSdkVersion
//     ndkVersion = flutter.ndkVersion

//     compileOptions {
//         sourceCompatibility = JavaVersion.VERSION_1_8
//         targetCompatibility = JavaVersion.VERSION_1_8
//     }

//     kotlinOptions {
//         jvmTarget = JavaVersion.VERSION_1_8
//     }

//     defaultConfig {
//         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//         applicationId "br.app.ondegastei.onde_gastei_app"
//         minSdk = localProperties.getProperty('flutter.minSdkVersion').toInteger()
//         // flutter.minSdkVersion
//         targetSdk = flutter.targetSdkVersion
//         versionCode = flutter.versionCode
//         versionName = flutter.versionName
//     }

//     signingConfigs {
//         release {
//             keyAlias keystoreProperties['keyAlias']
//             keyPassword keystoreProperties['keyPassword']
//             storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//             storePassword keystoreProperties['storePassword']
//         }
//     }

//     buildTypes {
//         release {
//             // TODO: Add your own signing config for the release build.
//             // Signing with the debug keys for now, so `flutter run --release` works.
//             signingConfig = signingConfigs.release
//         }
//         debug {
//             signingConfig = signingConfigs.debug
//         }
//     }
// }

// flutter {
//     source = "../.."
// }


